theory Jessie_model

use import int.Int

use bool.Bool

use import jessie_why3theories.Jessie_memory_model

type charP

type int32

type int8

type intP

type padding

type voidP

function charP_tag  : (tag_id charP)

axiom charP_int "charP_int": ((int_of_tag charP_tag) = (1))

function charP_of_pointer_address (pointer ()) : (pointer charP)

axiom charP_of_pointer_address_of_pointer_addr "charP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer charP).
  (p = (charP_of_pointer_address (pointer_address p))))

axiom charP_parenttag_bottom "charP_parenttag_bottom":
 (parenttag charP_tag bottom_tag)

axiom charP_tags "charP_tags":
 (forall x:(pointer charP).
  (forall charP_tag_table:(tag_table charP).
   (instanceof charP_tag_table x charP_tag)))

function integer_of_int32 int32 : int

predicate eq_int32(x:int32) (y:int32) =
 ((integer_of_int32 x) = (integer_of_int32 y))

function integer_of_int8 int8 : int

predicate eq_int8(x:int8) (y:int8) =
 ((integer_of_int8 x) = (integer_of_int8 y))

function int32_of_integer int : int32

axiom int32_coerce "int32_coerce":
 (forall x:int.
  (((Int.(<=) (-2147483648) x) /\ (Int.(<=) x (2147483647))) ->
   ((integer_of_int32 (int32_of_integer x)) = x)))

axiom int32_extensionality "int32_extensionality":
 (forall x:int32.
  (forall y:int32[((integer_of_int32 x) = (integer_of_int32 y))].
   (((integer_of_int32 x) = (integer_of_int32 y)) -> (x = y))))

axiom int32_range "int32_range":
 (forall x:int32.
  ((Int.(<=) (-2147483648) (integer_of_int32 x))
  /\ (Int.(<=) (integer_of_int32 x) (2147483647))))

function int8_of_integer int : int8

axiom int8_coerce "int8_coerce":
 (forall x:int.
  (((Int.(<=) (-128) x) /\ (Int.(<=) x (127))) ->
   ((integer_of_int8 (int8_of_integer x)) = x)))

axiom int8_extensionality "int8_extensionality":
 (forall x:int8.
  (forall y:int8[((integer_of_int8 x) = (integer_of_int8 y))].
   (((integer_of_int8 x) = (integer_of_int8 y)) -> (x = y))))

axiom int8_range "int8_range":
 (forall x:int8.
  ((Int.(<=) (-128) (integer_of_int8 x))
  /\ (Int.(<=) (integer_of_int8 x) (127))))

function intP_tag  : (tag_id intP)

axiom intP_int "intP_int": ((int_of_tag intP_tag) = (1))

function intP_of_pointer_address (pointer ()) : (pointer intP)

axiom intP_of_pointer_address_of_pointer_addr "intP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer intP).
  (p = (intP_of_pointer_address (pointer_address p))))

axiom intP_parenttag_bottom "intP_parenttag_bottom":
 (parenttag intP_tag bottom_tag)

axiom intP_tags "intP_tags":
 (forall x:(pointer intP).
  (forall intP_tag_table:(tag_table intP).
   (instanceof intP_tag_table x intP_tag)))

predicate left_valid_struct_charP(p:(pointer charP)) (a:int) (charP_alloc_table:(alloc_table charP)) =
 ((offset_min charP_alloc_table p) <= a)

predicate left_valid_struct_intP(p:(pointer intP)) (a:int) (intP_alloc_table:(alloc_table intP)) =
 ((offset_min intP_alloc_table p) <= a)

predicate left_valid_struct_voidP(p:(pointer voidP)) (a:int) (voidP_alloc_table:(alloc_table voidP)) =
 ((offset_min voidP_alloc_table p) <= a)

axiom pointer_addr_of_charP_of_pointer_address "pointer_addr_of_charP_of_pointer_address":
 (forall p:(pointer ()).
  (p = (pointer_address (charP_of_pointer_address p))))

axiom pointer_addr_of_intP_of_pointer_address "pointer_addr_of_intP_of_pointer_address":
 (forall p:(pointer ()). (p = (pointer_address (intP_of_pointer_address p))))

function voidP_of_pointer_address (pointer ()) : (pointer voidP)

axiom pointer_addr_of_voidP_of_pointer_address "pointer_addr_of_voidP_of_pointer_address":
 (forall p:(pointer ()).
  (p = (pointer_address (voidP_of_pointer_address p))))

predicate right_valid_struct_charP(p:(pointer charP)) (b:int) (charP_alloc_table:(alloc_table charP)) =
 ((offset_max charP_alloc_table p) >= b)

predicate right_valid_struct_intP(p:(pointer intP)) (b:int) (intP_alloc_table:(alloc_table intP)) =
 ((offset_max intP_alloc_table p) >= b)

predicate right_valid_struct_voidP(p:(pointer voidP)) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 ((offset_max voidP_alloc_table p) >= b)

predicate strict_valid_root_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) = a)
 /\ ((offset_max charP_alloc_table p) = b))

predicate strict_valid_root_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) = a)
 /\ ((offset_max intP_alloc_table p) = b))

predicate strict_valid_root_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) = a)
 /\ ((offset_max voidP_alloc_table p) = b))

predicate strict_valid_struct_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) = a)
 /\ ((offset_max charP_alloc_table p) = b))

predicate strict_valid_struct_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) = a)
 /\ ((offset_max intP_alloc_table p) = b))

predicate strict_valid_struct_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) = a)
 /\ ((offset_max voidP_alloc_table p) = b))

predicate valid_root_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) <= a)
 /\ ((offset_max charP_alloc_table p) >= b))

predicate valid_root_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) <= a)
 /\ ((offset_max intP_alloc_table p) >= b))

predicate valid_root_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) <= a)
 /\ ((offset_max voidP_alloc_table p) >= b))

predicate valid_struct_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) <= a)
 /\ ((offset_max charP_alloc_table p) >= b))

predicate valid_struct_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) <= a)
 /\ ((offset_max intP_alloc_table p) >= b))

predicate valid_struct_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) <= a)
 /\ ((offset_max voidP_alloc_table p) >= b))

function voidP_tag  : (tag_id voidP)

axiom voidP_int "voidP_int": ((int_of_tag voidP_tag) = (1))

axiom voidP_of_pointer_address_of_pointer_addr "voidP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer voidP).
  (p = (voidP_of_pointer_address (pointer_address p))))

axiom voidP_parenttag_bottom "voidP_parenttag_bottom":
 (parenttag voidP_tag bottom_tag)

axiom voidP_tags "voidP_tags":
 (forall x:(pointer voidP).
  (forall voidP_tag_table:(tag_table voidP).
   (instanceof voidP_tag_table x voidP_tag)))

end

module Jessie_program

use import int.Int

use bool.Bool

use import jessie_why3theories.Jessie_memory_model

use import Jessie_model

use import ref.Ref

use import jessie_why3.JessieDivision

use import jessie_why3.Jessie_memory_model_parameters

exception Goto__LAND_exc ()

exception Goto_while_0_break_0_exc ()

exception Goto_while_0_break_exc ()

exception Loop_continue_exc ()

exception Loop_exit_exc ()

exception Return_label_exc ()

val charP_alloc_table : ref (alloc_table charP)

val charP_tag_table : ref (tag_table charP)

val alloc_struct_charP
 (n:int)
  (charP_alloc_table:ref (alloc_table charP))
   (charP_tag_table:ref (tag_table charP)) : (pointer charP)
    requires { true } writes { charP_alloc_table, charP_tag_table }
     ensures { ((strict_valid_struct_charP result (0) (Int.(-) n (1))
                !charP_alloc_table)
               /\ ((alloc_extends (old !charP_alloc_table)
                   !charP_alloc_table)
                  /\ ((alloc_fresh (old !charP_alloc_table) result n)
                     /\ (instanceof !charP_tag_table result charP_tag)))) }

val alloc_struct_charP_requires
 (n:int)
  (charP_alloc_table:ref (alloc_table charP))
   (charP_tag_table:ref (tag_table charP)) : (pointer charP)
    requires { (Int.(>=) n (0)) } writes { charP_alloc_table,
    charP_tag_table }
     ensures { ((strict_valid_struct_charP result (0) (Int.(-) n (1))
                !charP_alloc_table)
               /\ ((alloc_extends (old !charP_alloc_table)
                   !charP_alloc_table)
                  /\ ((alloc_fresh (old !charP_alloc_table) result n)
                     /\ (instanceof !charP_tag_table result charP_tag)))) }

val intP_alloc_table : ref (alloc_table intP)

val intP_tag_table : ref (tag_table intP)

val alloc_struct_intP
 (n:int)
  (intP_alloc_table:ref (alloc_table intP))
   (intP_tag_table:ref (tag_table intP)) : (pointer intP)
    requires { true } writes { intP_alloc_table, intP_tag_table }
     ensures { ((strict_valid_struct_intP result (0) (Int.(-) n (1))
                !intP_alloc_table)
               /\ ((alloc_extends (old !intP_alloc_table) !intP_alloc_table)
                  /\ ((alloc_fresh (old !intP_alloc_table) result n)
                     /\ (instanceof !intP_tag_table result intP_tag)))) }

val alloc_struct_intP_requires
 (n:int)
  (intP_alloc_table:ref (alloc_table intP))
   (intP_tag_table:ref (tag_table intP)) : (pointer intP)
    requires { (Int.(>=) n (0)) } writes { intP_alloc_table, intP_tag_table }
     ensures { ((strict_valid_struct_intP result (0) (Int.(-) n (1))
                !intP_alloc_table)
               /\ ((alloc_extends (old !intP_alloc_table) !intP_alloc_table)
                  /\ ((alloc_fresh (old !intP_alloc_table) result n)
                     /\ (instanceof !intP_tag_table result intP_tag)))) }

val voidP_alloc_table : ref (alloc_table voidP)

val voidP_tag_table : ref (tag_table voidP)

val alloc_struct_voidP
 (n:int)
  (voidP_alloc_table:ref (alloc_table voidP))
   (voidP_tag_table:ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures { ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
                !voidP_alloc_table)
               /\ ((alloc_extends (old !voidP_alloc_table)
                   !voidP_alloc_table)
                  /\ ((alloc_fresh (old !voidP_alloc_table) result n)
                     /\ (instanceof !voidP_tag_table result voidP_tag)))) }

val alloc_struct_voidP_requires
 (n:int)
  (voidP_alloc_table:ref (alloc_table voidP))
   (voidP_tag_table:ref (tag_table voidP)) : (pointer voidP)
    requires { (Int.(>=) n (0)) } writes { voidP_alloc_table,
    voidP_tag_table }
     ensures { ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
                !voidP_alloc_table)
               /\ ((alloc_extends (old !voidP_alloc_table)
                   !voidP_alloc_table)
                  /\ ((alloc_fresh (old !voidP_alloc_table) result n)
                     /\ (instanceof !voidP_tag_table result voidP_tag)))) }

val any_int32 (_anonymous:()) : int32 requires { true }  ensures { true }

val any_int8 (_anonymous:()) : int8 requires { true }  ensures { true }

val double_arr
 (t:(pointer intP))
  (size:int32)
   (intP_intM_t_1:ref (memory intP int32))
    (intP_t_1_alloc_table:(alloc_table intP)) : ()
     requires { true } reads { intP_intM_t_1 }  writes { intP_intM_t_1 }
      ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 75 9 16#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 17 12 60#
                 (forall i:int.
                  (((Int.(<=) (0) i) /\ (Int.(<) i (integer_of_int32 size))) ->
                   ((integer_of_int32 (select !intP_intM_t_1 (shift t i))) = 
                   (Int.(*) i (2))))))
                /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 19 5 15#
                   (not_assigns intP_t_1_alloc_table (old !intP_intM_t_1)
                   !intP_intM_t_1
                   (pset_range (pset_singleton t) (0)
                   (Int.(-) (integer_of_int32 size) (1))))))) }

val double_arr_requires
 (t:(pointer intP))
  (size:int32)
   (intP_intM_t_1:ref (memory intP int32))
    (intP_t_1_alloc_table:(alloc_table intP)) : ()
     requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 12 13 21#
                 (Int.(<) (0) (integer_of_int32 size)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 12 17 28#
                    (Int.(<) (integer_of_int32 size) (1000)))
                   /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 13 13 34#
                       (Int.(<=) (offset_min intP_t_1_alloc_table t) (0)))
                      /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 13 13 34#
                         (Int.(>=) (offset_max intP_t_1_alloc_table t)
                         (Int.(-) (integer_of_int32 size) (1)))))))) }
     reads { intP_intM_t_1 }  writes { intP_intM_t_1 }
      ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 75 9 16#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 17 12 60#
                 (forall i:int.
                  (((Int.(<=) (0) i) /\ (Int.(<) i (integer_of_int32 size))) ->
                   ((integer_of_int32 (select !intP_intM_t_1 (shift t i))) = 
                   (Int.(*) i (2))))))
                /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 19 5 15#
                   (not_assigns intP_t_1_alloc_table (old !intP_intM_t_1)
                   !intP_intM_t_1
                   (pset_range (pset_singleton t) (0)
                   (Int.(-) (integer_of_int32 size) (1))))))) }

val increasing
 (t_0:(pointer intP))
  (size_0:int32)
   (intP_t_0_2_alloc_table:(alloc_table intP))
    (intP_intM_t_0_2:(memory intP int32)) : int32
     requires { true }
      ensures { (((exists i_0_0:int.
                   (exists j_1:int.
                    ((Int.(<=) (0) i_0_0)
                    /\ ((Int.(<) i_0_0 j_1)
                       /\ ((Int.(<) j_1 (integer_of_int32 size_0))
                          /\ (Int.(>)
                             (integer_of_int32
                             (select intP_intM_t_0_2 (shift t_0 i_0_0)))
                             (integer_of_int32
                             (select intP_intM_t_0_2 (shift t_0 j_1))))))))) ->
                  (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 43 16 28#
                  ((integer_of_int32 result) = (0))))
                /\ ((forall i_1:int.
                     (forall j_2:int.
                      (((Int.(<=) (0) i_1)
                       /\ ((Int.(<) i_1 j_2)
                          /\ (Int.(<) j_2 (integer_of_int32 size_0)))) ->
                       (Int.(<=)
                       (integer_of_int32
                       (select intP_intM_t_0_2 (shift t_0 i_1)))
                       (integer_of_int32
                       (select intP_intM_t_0_2 (shift t_0 j_2))))))) ->
                    (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 40 16 28#
                    ((integer_of_int32 result) = (1))))) }

val increasing_requires
 (t_0:(pointer intP))
  (size_0:int32)
   (intP_t_0_2_alloc_table:(alloc_table intP))
    (intP_intM_t_0_2:(memory intP int32)) : int32
     requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 33 13 21#
                 (Int.(>) (integer_of_int32 size_0) (1)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                    (Int.(<=) (offset_min intP_t_0_2_alloc_table t_0) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                      (Int.(>=) (offset_max intP_t_0_2_alloc_table t_0)
                      (Int.(-) (integer_of_int32 size_0) (1))))))) }
      ensures { (((exists i_0_0:int.
                   (exists j_1:int.
                    ((Int.(<=) (0) i_0_0)
                    /\ ((Int.(<) i_0_0 j_1)
                       /\ ((Int.(<) j_1 (integer_of_int32 size_0))
                          /\ (Int.(>)
                             (integer_of_int32
                             (select intP_intM_t_0_2 (shift t_0 i_0_0)))
                             (integer_of_int32
                             (select intP_intM_t_0_2 (shift t_0 j_1))))))))) ->
                  (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 43 16 28#
                  ((integer_of_int32 result) = (0))))
                /\ ((forall i_1:int.
                     (forall j_2:int.
                      (((Int.(<=) (0) i_1)
                       /\ ((Int.(<) i_1 j_2)
                          /\ (Int.(<) j_2 (integer_of_int32 size_0)))) ->
                       (Int.(<=)
                       (integer_of_int32
                       (select intP_intM_t_0_2 (shift t_0 i_1)))
                       (integer_of_int32
                       (select intP_intM_t_0_2 (shift t_0 j_2))))))) ->
                    (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 40 16 28#
                    ((integer_of_int32 result) = (1))))) }

val int32_of_integer_
 (x:int) : int32
  requires { ((Int.(<=) (-2147483648) x) /\ (Int.(<=) x (2147483647))) }
   ensures { ((integer_of_int32 result) = x) }

val int8_of_integer_
 (x:int) : int8
  requires { ((Int.(<=) (-128) x) /\ (Int.(<=) x (127))) }
   ensures { ((integer_of_int8 result) = x) }

val max3
 (a:int32)
  (b:int32)
   (c:int32) : int32
    requires { true }
     ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 12 106#
               ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 12 24#
                (Int.(>=) (integer_of_int32 result) (integer_of_int32 a)))
               /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 28 40#
                   (Int.(>=) (integer_of_int32 result) (integer_of_int32 b)))
                  /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 44 56#
                      (Int.(>=) (integer_of_int32 result)
                      (integer_of_int32 c)))
                     /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 60 106#
                        (((integer_of_int32 result) = (integer_of_int32 a))
                        \/ (((integer_of_int32 result) = (integer_of_int32 b))
                           \/ ((integer_of_int32 result) = (integer_of_int32
                                                           c))))))))) }

val max3_requires
 (a:int32)
  (b:int32)
   (c:int32) : int32
    requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
               true) }
     ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 12 106#
               ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 12 24#
                (Int.(>=) (integer_of_int32 result) (integer_of_int32 a)))
               /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 28 40#
                   (Int.(>=) (integer_of_int32 result) (integer_of_int32 b)))
                  /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 44 56#
                      (Int.(>=) (integer_of_int32 result)
                      (integer_of_int32 c)))
                     /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 60 106#
                        (((integer_of_int32 result) = (integer_of_int32 a))
                        \/ (((integer_of_int32 result) = (integer_of_int32 b))
                           \/ ((integer_of_int32 result) = (integer_of_int32
                                                           c))))))))) }

val monotonic
 (t_1:(pointer intP))
  (size_2:int32)
   (intP_t_1_3_alloc_table:(alloc_table intP))
    (intP_intM_t_1_3:(memory intP int32)) : int32
     requires { true }
      ensures { (((exists i_2:int.
                   (exists j_5:int.
                    ((Int.(<=) (0) i_2)
                    /\ ((Int.(<) i_2 j_5)
                       /\ ((Int.(<) j_5
                           (Int.(-) (integer_of_int32 size_2) (1)))
                          /\ (((Int.(<=)
                               (integer_of_int32
                               (select intP_intM_t_1_3 (shift t_1 i_2)))
                               (integer_of_int32
                               (select intP_intM_t_1_3
                               (shift t_1 (Int.(+) i_2 (1))))))
                              /\ (Int.(>)
                                 (integer_of_int32
                                 (select intP_intM_t_1_3 (shift t_1 j_5)))
                                 (integer_of_int32
                                 (select intP_intM_t_1_3
                                 (shift t_1 (Int.(+) j_5 (1)))))))
                             \/ ((Int.(<)
                                 (integer_of_int32
                                 (select intP_intM_t_1_3 (shift t_1 i_2)))
                                 (integer_of_int32
                                 (select intP_intM_t_1_3
                                 (shift t_1 (Int.(+) i_2 (1))))))
                                /\ (Int.(>=)
                                   (integer_of_int32
                                   (select intP_intM_t_1_3 (shift t_1 j_5)))
                                   (integer_of_int32
                                   (select intP_intM_t_1_3
                                   (shift t_1 (Int.(+) j_5 (1))))))))))))) ->
                  (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 72 16 28#
                  ((integer_of_int32 result) = (0))))
                /\ (((forall i_3:int.
                      (forall j_6:int.
                       (((Int.(<=) (0) i_3)
                        /\ ((Int.(<) i_3 j_6)
                           /\ (Int.(<) j_6 (integer_of_int32 size_2)))) ->
                        (Int.(>=)
                        (integer_of_int32
                        (select intP_intM_t_1_3 (shift t_1 i_3)))
                        (integer_of_int32
                        (select intP_intM_t_1_3 (shift t_1 j_6))))))) ->
                     (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 69 16 28#
                     ((integer_of_int32 result) = (1))))
                   /\ ((forall i_4:int.
                        (forall j_7:int.
                         (((Int.(<=) (0) i_4)
                          /\ ((Int.(<) i_4 j_7)
                             /\ (Int.(<) j_7 (integer_of_int32 size_2)))) ->
                          (Int.(<=)
                          (integer_of_int32
                          (select intP_intM_t_1_3 (shift t_1 i_4)))
                          (integer_of_int32
                          (select intP_intM_t_1_3 (shift t_1 j_7))))))) ->
                       (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 66 16 28#
                       ((integer_of_int32 result) = (1)))))) }

val monotonic_requires
 (t_1:(pointer intP))
  (size_2:int32)
   (intP_t_1_3_alloc_table:(alloc_table intP))
    (intP_intM_t_1_3:(memory intP int32)) : int32
     requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 61 13 21#
                 (Int.(>) (integer_of_int32 size_2) (1)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                    (Int.(<=) (offset_min intP_t_1_3_alloc_table t_1) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                      (Int.(>=) (offset_max intP_t_1_3_alloc_table t_1)
                      (Int.(-) (integer_of_int32 size_2) (1))))))) }
      ensures { (((exists i_2:int.
                   (exists j_5:int.
                    ((Int.(<=) (0) i_2)
                    /\ ((Int.(<) i_2 j_5)
                       /\ ((Int.(<) j_5
                           (Int.(-) (integer_of_int32 size_2) (1)))
                          /\ (((Int.(<=)
                               (integer_of_int32
                               (select intP_intM_t_1_3 (shift t_1 i_2)))
                               (integer_of_int32
                               (select intP_intM_t_1_3
                               (shift t_1 (Int.(+) i_2 (1))))))
                              /\ (Int.(>)
                                 (integer_of_int32
                                 (select intP_intM_t_1_3 (shift t_1 j_5)))
                                 (integer_of_int32
                                 (select intP_intM_t_1_3
                                 (shift t_1 (Int.(+) j_5 (1)))))))
                             \/ ((Int.(<)
                                 (integer_of_int32
                                 (select intP_intM_t_1_3 (shift t_1 i_2)))
                                 (integer_of_int32
                                 (select intP_intM_t_1_3
                                 (shift t_1 (Int.(+) i_2 (1))))))
                                /\ (Int.(>=)
                                   (integer_of_int32
                                   (select intP_intM_t_1_3 (shift t_1 j_5)))
                                   (integer_of_int32
                                   (select intP_intM_t_1_3
                                   (shift t_1 (Int.(+) j_5 (1))))))))))))) ->
                  (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 72 16 28#
                  ((integer_of_int32 result) = (0))))
                /\ (((forall i_3:int.
                      (forall j_6:int.
                       (((Int.(<=) (0) i_3)
                        /\ ((Int.(<) i_3 j_6)
                           /\ (Int.(<) j_6 (integer_of_int32 size_2)))) ->
                        (Int.(>=)
                        (integer_of_int32
                        (select intP_intM_t_1_3 (shift t_1 i_3)))
                        (integer_of_int32
                        (select intP_intM_t_1_3 (shift t_1 j_6))))))) ->
                     (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 69 16 28#
                     ((integer_of_int32 result) = (1))))
                   /\ ((forall i_4:int.
                        (forall j_7:int.
                         (((Int.(<=) (0) i_4)
                          /\ ((Int.(<) i_4 j_7)
                             /\ (Int.(<) j_7 (integer_of_int32 size_2)))) ->
                          (Int.(<=)
                          (integer_of_int32
                          (select intP_intM_t_1_3 (shift t_1 i_4)))
                          (integer_of_int32
                          (select intP_intM_t_1_3 (shift t_1 j_7))))))) ->
                       (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 66 16 28#
                       ((integer_of_int32 result) = (1)))))) }

val safe_int32_of_integer_
 (x:int) : int32
  requires { true }  ensures { ((integer_of_int32 result) = x) }

val safe_int8_of_integer_
 (x:int) : int8 requires { true }  ensures { ((integer_of_int8 result) = x) }

let double_arr_ensures_default "W:diverges:N" "expl:Function double_arr, default behavior"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 19 5 15#=
 fun (t : (pointer intP)) (size : int32) (intP_intM_t_1 : ref (memory intP int32)) (intP_t_1_alloc_table : (alloc_table intP)) ->
  requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 12 13 21#
              (Int.(<) (0) (integer_of_int32 size)))
             /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 12 17 28#
                 (Int.(<) (integer_of_int32 size) (1000)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 13 13 34#
                    (Int.(<=) (offset_min intP_t_1_alloc_table t) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 13 13 34#
                      (Int.(>=) (offset_max intP_t_1_alloc_table t)
                      (Int.(-) (integer_of_int32 size) (1))))))))  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 75 9 16#
            ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 17 12 60#
             (forall i:int.
              (((Int.(<=) (0) i) /\ (Int.(<) i (integer_of_int32 size))) ->
               ((integer_of_int32 (select !intP_intM_t_1 (shift t i))) = 
               (Int.(*) i (2))))))
            /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 19 5 15#
               (not_assigns intP_t_1_alloc_table (old !intP_intM_t_1)
               !intP_intM_t_1
               (pset_range (pset_singleton t) (0)
               (Int.(-) (integer_of_int32 size) (1))))))) } 
  ('Init: 
  try
   begin
     (let i_0 = ref (any_int32 ()) in
     try
      begin
        (let _jessie_45 = (i_0 := (safe_int32_of_integer_ (0))) in ());
       ('Loop_2: 
       begin
         loop
         invariant
           { (((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 22 23 68#
               (forall j:int.
                (((Int.(<=) (0) j) /\ (Int.(<) j (integer_of_int32 !i_0))) ->
                 ((integer_of_int32 (select !intP_intM_t_1 (shift t j))) = 
                 (Int.(*) (2) j)))))
              /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 21 23 37#
                 ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 21 23 29#
                  (Int.(<=) (0) (integer_of_int32 !i_0)))
                 /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 21 28 37#
                    (Int.(<=) (integer_of_int32 !i_0)
                    (integer_of_int32 size))))))
             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 85 6 776#
                (not_assigns intP_t_1_alloc_table (at !intP_intM_t_1 'Init)
                !intP_intM_t_1
                (pset_range (pset_singleton t) (0)
                (Int.(-) (integer_of_int32 size) (1)))))) } 
          begin
            any () requires { true }  ensures { true } ;
           try
            begin
              (let _jessie_53 =
              begin
                (if (Int.(<) (integer_of_int32 !i_0) (integer_of_int32 size))
                then () else (raise (Goto_while_0_break_exc ())));
               (let _jessie_51 =
               (let _jessie_47 =
               (safe_int32_of_integer_ (Int.(*) (integer_of_int32 !i_0) (2))) in
               (let _jessie_48 = t in
               (let _jessie_49 = (integer_of_int32 !i_0) in
               (let _jessie_50 = (shift _jessie_48 _jessie_49) in
               begin
                 (safe_upd_ intP_intM_t_1 _jessie_50 _jessie_47); _jessie_47
               end)))) in ());
               (i_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0) (1))));
               !i_0 end in ()); (raise (Loop_continue_exc ())) end with
            Loop_continue_exc _jessie_5 -> () end end end;
        (raise (Goto_while_0_break_exc ())) end) end with
      Goto_while_0_break_exc _jessie_3 ->
      ('While_0_break:  begin   (); (raise Return) end) end); (raise Return)
   end with Return -> () end) 

let double_arr_safety "expl:Function double_arr, Safety"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 19 5 15#=
 fun (t : (pointer intP)) (size : int32) (intP_intM_t_1 : ref (memory intP int32)) (intP_t_1_alloc_table : (alloc_table intP)) ->
  requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 12 13 21#
              (Int.(<) (0) (integer_of_int32 size)))
             /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 12 17 28#
                 (Int.(<) (integer_of_int32 size) (1000)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 13 13 34#
                    (Int.(<=) (offset_min intP_t_1_alloc_table t) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 13 13 34#
                      (Int.(>=) (offset_max intP_t_1_alloc_table t)
                      (Int.(-) (integer_of_int32 size) (1))))))))  }
  ensures { true } 
  ('Init: 
  try
   begin
     (let i_0 = ref (any_int32 ()) in
     try
      begin
        (let _jessie_35 = (i_0 := (safe_int32_of_integer_ (0))) in ());
       ('Loop_1: 
       begin
         loop
         invariant
           { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 85 6 776#
             true) }
           variant { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 23 21 29# 
             (Int.(-) (integer_of_int32 size) (integer_of_int32 !i_0))) }
          begin
            any ()
            requires { true } reads { i_0, intP_intM_t_1 } 
             ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 22 23 68#
                        (forall j:int.
                         (((Int.(<=) (0) j)
                          /\ (Int.(<) j (integer_of_int32 !i_0))) ->
                          ((integer_of_int32
                           (select !intP_intM_t_1 (shift t j))) = (Int.(*)
                                                                  (2) j)))))
                       /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 21 23 37#
                          ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 21 23 29#
                           (Int.(<=) (0) (integer_of_int32 !i_0)))
                          /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 21 28 37#
                             (Int.(<=) (integer_of_int32 !i_0)
                             (integer_of_int32 size)))))) } ;
           try
            begin
              (let _jessie_43 =
              begin
                (if (Int.(<) (integer_of_int32 !i_0) (integer_of_int32 size))
                then () else (raise (Goto_while_0_break_exc ())));
               (let _jessie_41 =
               (let _jessie_37 =
               ("expl:arithmetic overflow"
               #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 27 15 18#
               (int32_of_integer_ (Int.(*) (integer_of_int32 !i_0) (2)))) in
               (let _jessie_38 = t in
               (let _jessie_39 = (integer_of_int32 !i_0) in
               (let _jessie_40 = (shift _jessie_38 _jessie_39) in
               ("expl:pointer dereference"
               #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 98 25 220#
               begin
                 (offset_upd_ intP_t_1_alloc_table intP_intM_t_1 _jessie_38 _jessie_39 _jessie_37);
                _jessie_37 end))))) in ());
               (i_0 := ("expl:arithmetic overflow"
                       #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 25 25 28#
                       (int32_of_integer_ (Int.(+) (integer_of_int32 !i_0) (1)))));
               !i_0 end in ()); (raise (Loop_continue_exc ())) end with
            Loop_continue_exc _jessie_5 -> () end end end;
        (raise (Goto_while_0_break_exc ())) end) end with
      Goto_while_0_break_exc _jessie_3 ->
      ('While_0_break:  begin   (); (raise Return) end) end); (raise Return)
   end with Return -> () end) 

let increasing_ensures_default "W:diverges:N" "expl:Function increasing, default behavior"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 45 4 14#=
 fun (t_0 : (pointer intP)) (size_0 : int32) (intP_t_0_2_alloc_table : (alloc_table intP)) (intP_intM_t_0_2 : (memory intP int32)) ->
  requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 33 13 21#
              (Int.(>) (integer_of_int32 size_0) (1)))
             /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                 (Int.(<=) (offset_min intP_t_0_2_alloc_table t_0) (0)))
                /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                   (Int.(>=) (offset_max intP_t_0_2_alloc_table t_0)
                   (Int.(-) (integer_of_int32 size_0) (1)))))))  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 116 10 18#
            true) } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let i_0_1 = ref (any_int32 ()) in
     (let __retres_0 = ref (any_int32 ()) in
     try
      begin
        try
         begin
           (let _jessie_64 = (i_0_1 := (safe_int32_of_integer_ (0))) in ());
          ('Loop_4: 
          begin
            loop
            invariant
              { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 48 23 73#
                 (forall j_0:int.
                  (((Int.(<=) (0) j_0)
                   /\ (Int.(<) j_0 (Int.(-) (integer_of_int32 !i_0_1) (1)))) ->
                   (Int.(<=)
                   (integer_of_int32
                   (select intP_intM_t_0_2 (shift t_0 j_0)))
                   (integer_of_int32
                   (select intP_intM_t_0_2 (shift t_0 (Int.(+) j_0 (1)))))))))
                /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 23 39#
                   ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 23 29#
                    (Int.(<=) (0) (integer_of_int32 !i_0_1)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 28 39#
                      (Int.(<=) (integer_of_int32 !i_0_1)
                      (Int.(-) (integer_of_int32 size_0) (1))))))) } 
              
             begin
               any () requires { true }  ensures { true } ;
              try
               begin
                 (let _jessie_68 =
                 begin
                   (if (Int.(<) (integer_of_int32 !i_0_1) (integer_of_int32 
                                                           (safe_int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_0) (1)))))
                   then () else (raise (Goto_while_0_break_exc ())));
                  (if (Int.(>) (integer_of_int32 (safe_acc_ intP_intM_t_0_2 
                                                  (shift t_0 (integer_of_int32 !i_0_1)))) 
                       (integer_of_int32 (safe_acc_ intP_intM_t_0_2 (shift t_0 
                                                                    (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_0_1) (1))))))))
                  then
                   begin
                     (let _jessie_66 =
                     (__retres_0 := (safe_int32_of_integer_ (0))) in ());
                    (raise (Return_label_exc ())) end else ());
                  (i_0_1 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_1) (1))));
                  !i_0_1 end in ()); (raise (Loop_continue_exc ())) end with
               Loop_continue_exc _jessie_9 -> () end end end;
           (raise (Goto_while_0_break_exc ())) end) end with
         Goto_while_0_break_exc _jessie_6 -> ('While_0_break:  ()) end;
       (let _jessie_70 = (__retres_0 := (safe_int32_of_integer_ (1))) in ());
       (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
      ('Return_label:  begin   (return := !__retres_0); (raise Return) end) end));
    absurd  end with Return -> !return end)) 

let increasing_ensures_non_decreasing "W:diverges:N" "expl:Function increasing, Behavior `non_decreasing'"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 45 4 14#=
 fun (t_0 : (pointer intP)) (size_0 : int32) (intP_t_0_2_alloc_table : (alloc_table intP)) (intP_intM_t_0_2 : (memory intP int32)) ->
  requires { ((forall i_1:int.
               (forall j_2:int.
                (((Int.(<=) (0) i_1)
                 /\ ((Int.(<) i_1 j_2)
                    /\ (Int.(<) j_2 (integer_of_int32 size_0)))) ->
                 (Int.(<=)
                 (integer_of_int32 (select intP_intM_t_0_2 (shift t_0 i_1)))
                 (integer_of_int32 (select intP_intM_t_0_2 (shift t_0 j_2)))))))
             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 33 13 21#
                 (Int.(>) (integer_of_int32 size_0) (1)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                    (Int.(<=) (offset_min intP_t_0_2_alloc_table t_0) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                      (Int.(>=) (offset_max intP_t_0_2_alloc_table t_0)
                      (Int.(-) (integer_of_int32 size_0) (1))))))))  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 40 16 28#
            ((integer_of_int32 result) = (1))) } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let i_0_1 = ref (any_int32 ()) in
     (let __retres_0 = ref (any_int32 ()) in
     try
      begin
        try
         begin
           (let _jessie_73 = (i_0_1 := (safe_int32_of_integer_ (0))) in ());
          ('Loop_5: 
          begin
            loop
            invariant
              { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 138 9 1124#
                true) } 
             begin
               any ()
               requires { true } reads { i_0_1 } 
                ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 48 23 73#
                           (forall j_0:int.
                            (((Int.(<=) (0) j_0)
                             /\ (Int.(<) j_0
                                (Int.(-) (integer_of_int32 !i_0_1) (1)))) ->
                             (Int.(<=)
                             (integer_of_int32
                             (select intP_intM_t_0_2 (shift t_0 j_0)))
                             (integer_of_int32
                             (select intP_intM_t_0_2
                             (shift t_0 (Int.(+) j_0 (1)))))))))
                          /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 23 39#
                             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 23 29#
                              (Int.(<=) (0) (integer_of_int32 !i_0_1)))
                             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 28 39#
                                (Int.(<=) (integer_of_int32 !i_0_1)
                                (Int.(-) (integer_of_int32 size_0) (1))))))) } ;
              try
               begin
                 (let _jessie_77 =
                 begin
                   (if (Int.(<) (integer_of_int32 !i_0_1) (integer_of_int32 
                                                           (safe_int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_0) (1)))))
                   then () else (raise (Goto_while_0_break_exc ())));
                  (if (Int.(>) (integer_of_int32 (safe_acc_ intP_intM_t_0_2 
                                                  (shift t_0 (integer_of_int32 !i_0_1)))) 
                       (integer_of_int32 (safe_acc_ intP_intM_t_0_2 (shift t_0 
                                                                    (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_0_1) (1))))))))
                  then
                   begin
                     (let _jessie_75 =
                     (__retres_0 := (safe_int32_of_integer_ (0))) in ());
                    (raise (Return_label_exc ())) end else ());
                  (i_0_1 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_1) (1))));
                  !i_0_1 end in ()); (raise (Loop_continue_exc ())) end with
               Loop_continue_exc _jessie_9 -> () end end end;
           (raise (Goto_while_0_break_exc ())) end) end with
         Goto_while_0_break_exc _jessie_6 -> ('While_0_break:  ()) end;
       (let _jessie_79 = (__retres_0 := (safe_int32_of_integer_ (1))) in ());
       (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
      ('Return_label:  begin   (return := !__retres_0); (raise Return) end) end));
    absurd  end with Return -> !return end)) 

let increasing_ensures_non_increasing "W:diverges:N" "expl:Function increasing, Behavior `non_increasing'"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 45 4 14#=
 fun (t_0 : (pointer intP)) (size_0 : int32) (intP_t_0_2_alloc_table : (alloc_table intP)) (intP_intM_t_0_2 : (memory intP int32)) ->
  requires { ((exists i_0_0:int.
               (exists j_1:int.
                ((Int.(<=) (0) i_0_0)
                /\ ((Int.(<) i_0_0 j_1)
                   /\ ((Int.(<) j_1 (integer_of_int32 size_0))
                      /\ (Int.(>)
                         (integer_of_int32
                         (select intP_intM_t_0_2 (shift t_0 i_0_0)))
                         (integer_of_int32
                         (select intP_intM_t_0_2 (shift t_0 j_1)))))))))
             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 33 13 21#
                 (Int.(>) (integer_of_int32 size_0) (1)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                    (Int.(<=) (offset_min intP_t_0_2_alloc_table t_0) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                      (Int.(>=) (offset_max intP_t_0_2_alloc_table t_0)
                      (Int.(-) (integer_of_int32 size_0) (1))))))))  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 43 16 28#
            ((integer_of_int32 result) = (0))) } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let i_0_1 = ref (any_int32 ()) in
     (let __retres_0 = ref (any_int32 ()) in
     try
      begin
        try
         begin
           (let _jessie_82 = (i_0_1 := (safe_int32_of_integer_ (0))) in ());
          ('Loop_6: 
          begin
            loop
            invariant
              { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 138 9 1124#
                true) } 
             begin
               any ()
               requires { true } reads { i_0_1 } 
                ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 48 23 73#
                           (forall j_0:int.
                            (((Int.(<=) (0) j_0)
                             /\ (Int.(<) j_0
                                (Int.(-) (integer_of_int32 !i_0_1) (1)))) ->
                             (Int.(<=)
                             (integer_of_int32
                             (select intP_intM_t_0_2 (shift t_0 j_0)))
                             (integer_of_int32
                             (select intP_intM_t_0_2
                             (shift t_0 (Int.(+) j_0 (1)))))))))
                          /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 23 39#
                             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 23 29#
                              (Int.(<=) (0) (integer_of_int32 !i_0_1)))
                             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 28 39#
                                (Int.(<=) (integer_of_int32 !i_0_1)
                                (Int.(-) (integer_of_int32 size_0) (1))))))) } ;
              try
               begin
                 (let _jessie_86 =
                 begin
                   (if (Int.(<) (integer_of_int32 !i_0_1) (integer_of_int32 
                                                           (safe_int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_0) (1)))))
                   then () else (raise (Goto_while_0_break_exc ())));
                  (if (Int.(>) (integer_of_int32 (safe_acc_ intP_intM_t_0_2 
                                                  (shift t_0 (integer_of_int32 !i_0_1)))) 
                       (integer_of_int32 (safe_acc_ intP_intM_t_0_2 (shift t_0 
                                                                    (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_0_1) (1))))))))
                  then
                   begin
                     (let _jessie_84 =
                     (__retres_0 := (safe_int32_of_integer_ (0))) in ());
                    (raise (Return_label_exc ())) end else ());
                  (i_0_1 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_1) (1))));
                  !i_0_1 end in ()); (raise (Loop_continue_exc ())) end with
               Loop_continue_exc _jessie_9 -> () end end end;
           (raise (Goto_while_0_break_exc ())) end) end with
         Goto_while_0_break_exc _jessie_6 -> ('While_0_break:  ()) end;
       (let _jessie_88 = (__retres_0 := (safe_int32_of_integer_ (1))) in ());
       (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
      ('Return_label:  begin   (return := !__retres_0); (raise Return) end) end));
    absurd  end with Return -> !return end)) 

let increasing_safety "expl:Function increasing, Safety"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 45 4 14#=
 fun (t_0 : (pointer intP)) (size_0 : int32) (intP_t_0_2_alloc_table : (alloc_table intP)) (intP_intM_t_0_2 : (memory intP int32)) ->
  requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 33 13 21#
              (Int.(>) (integer_of_int32 size_0) (1)))
             /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                 (Int.(<=) (offset_min intP_t_0_2_alloc_table t_0) (0)))
                /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 34 13 34#
                   (Int.(>=) (offset_max intP_t_0_2_alloc_table t_0)
                   (Int.(-) (integer_of_int32 size_0) (1)))))))  }
  ensures { true } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let i_0_1 = ref (any_int32 ()) in
     (let __retres_0 = ref (any_int32 ()) in
     try
      begin
        try
         begin
           (let _jessie_55 = (i_0_1 := (safe_int32_of_integer_ (0))) in ());
          ('Loop_3: 
          begin
            loop
            invariant
              { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 138 9 1124#
                true) }
              variant { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 49 21 33# 
                (Int.(-) (Int.(-) (integer_of_int32 size_0) (1))
                (integer_of_int32 !i_0_1))) }
             begin
               any ()
               requires { true } reads { i_0_1 } 
                ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 48 23 73#
                           (forall j_0:int.
                            (((Int.(<=) (0) j_0)
                             /\ (Int.(<) j_0
                                (Int.(-) (integer_of_int32 !i_0_1) (1)))) ->
                             (Int.(<=)
                             (integer_of_int32
                             (select intP_intM_t_0_2 (shift t_0 j_0)))
                             (integer_of_int32
                             (select intP_intM_t_0_2
                             (shift t_0 (Int.(+) j_0 (1)))))))))
                          /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 23 39#
                             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 23 29#
                              (Int.(<=) (0) (integer_of_int32 !i_0_1)))
                             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 47 28 39#
                                (Int.(<=) (integer_of_int32 !i_0_1)
                                (Int.(-) (integer_of_int32 size_0) (1))))))) } ;
              try
               begin
                 (let _jessie_59 =
                 begin
                   (if (Int.(<) (integer_of_int32 !i_0_1) (integer_of_int32 
                                                           ("expl:arithmetic overflow"
                                                           #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 51 19 25#
                                                           (int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_0) (1))))))
                   then () else (raise (Goto_while_0_break_exc ())));
                  (if (Int.(>) (integer_of_int32 ("expl:pointer dereference"
                                                 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 52 11 15#
                                                 (offset_acc_ intP_t_0_2_alloc_table intP_intM_t_0_2 t_0 
                                                  (integer_of_int32 !i_0_1)))) 
                       (integer_of_int32 ("expl:pointer dereference"
                                         #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 52 18 24#
                                         (offset_acc_ intP_t_0_2_alloc_table intP_intM_t_0_2 t_0 
                                          (integer_of_int32 ("expl:arithmetic overflow"
                                                            #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 52 20 23#
                                                            (int32_of_integer_ 
                                                             (Int.(+) 
                                                               (integer_of_int32 !i_0_1) (1)))))))))
                  then
                   begin
                     (let _jessie_57 =
                     (__retres_0 := (safe_int32_of_integer_ (0))) in ());
                    (raise (Return_label_exc ())) end else ());
                  (i_0_1 := ("expl:arithmetic overflow"
                            #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 51 27 30#
                            (int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_1) (1)))));
                  !i_0_1 end in ()); (raise (Loop_continue_exc ())) end with
               Loop_continue_exc _jessie_9 -> () end end end;
           (raise (Goto_while_0_break_exc ())) end) end with
         Goto_while_0_break_exc _jessie_6 -> ('While_0_break:  ()) end;
       (let _jessie_61 = (__retres_0 := (safe_int32_of_integer_ (1))) in ());
       (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
      ('Return_label:  begin   (return := !__retres_0); (raise Return) end) end));
    absurd  end with Return -> !return end)) 

let max3_ensures_default "W:diverges:N" "expl:Function max3, default behavior"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 4 4 8#=
 fun (a : int32) (b : int32) (c : int32) ->
  requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
             true)  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 12 106#
            ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 12 24#
             (Int.(>=) (integer_of_int32 result) (integer_of_int32 a)))
            /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 28 40#
                (Int.(>=) (integer_of_int32 result) (integer_of_int32 b)))
               /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 44 56#
                   (Int.(>=) (integer_of_int32 result) (integer_of_int32 c)))
                  /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 2 60 106#
                     (((integer_of_int32 result) = (integer_of_int32 a))
                     \/ (((integer_of_int32 result) = (integer_of_int32 b))
                        \/ ((integer_of_int32 result) = (integer_of_int32 c))))))))) }
  
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let __retres = ref (any_int32 ()) in
     try
      begin
        try
         begin
           (if (Int.(>=) (integer_of_int32 a) (integer_of_int32 b))
           then
            (if (Int.(>=) (integer_of_int32 a) (integer_of_int32 c))
            then
             begin
               (let _jessie_26 = (__retres := a) in ());
              (raise (Return_label_exc ())) end
            else (raise (Goto__LAND_exc ())))
           else (raise (Goto__LAND_exc ()))); (raise (Goto__LAND_exc ())) end
         with Goto__LAND_exc _jessie_1 ->
         begin
           ();
          (if (Int.(>=) (integer_of_int32 b) (integer_of_int32 a))
          then
           (if (Int.(>=) (integer_of_int32 b) (integer_of_int32 c))
           then
            begin
              (let _jessie_28 = (__retres := b) in ());
             (raise (Return_label_exc ())) end
           else
            begin
              (let _jessie_30 = (__retres := c) in ());
             (raise (Return_label_exc ())) end)
          else
           begin
             (let _jessie_32 = (__retres := c) in ());
            (raise (Return_label_exc ())) end) end end;
       (raise (Return_label_exc ())) end with Return_label_exc _jessie_2 ->
      ('Return_label:  begin   (return := !__retres); (raise Return) end) end);
    absurd  end with Return -> !return end)) 

let max3_safety "expl:Function max3, Safety"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 4 4 8#=
 fun (a : int32) (b : int32) (c : int32) ->
  requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
             true)  } ensures { true } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let __retres = ref (any_int32 ()) in
     try
      begin
        try
         begin
           (if (Int.(>=) (integer_of_int32 a) (integer_of_int32 b))
           then
            (if (Int.(>=) (integer_of_int32 a) (integer_of_int32 c))
            then
             begin
               (let _jessie_17 = (__retres := a) in ());
              (raise (Return_label_exc ())) end
            else (raise (Goto__LAND_exc ())))
           else (raise (Goto__LAND_exc ()))); (raise (Goto__LAND_exc ())) end
         with Goto__LAND_exc _jessie_1 ->
         begin
           ();
          (if (Int.(>=) (integer_of_int32 b) (integer_of_int32 a))
          then
           (if (Int.(>=) (integer_of_int32 b) (integer_of_int32 c))
           then
            begin
              (let _jessie_19 = (__retres := b) in ());
             (raise (Return_label_exc ())) end
           else
            begin
              (let _jessie_21 = (__retres := c) in ());
             (raise (Return_label_exc ())) end)
          else
           begin
             (let _jessie_23 = (__retres := c) in ());
            (raise (Return_label_exc ())) end) end end;
       (raise (Return_label_exc ())) end with Return_label_exc _jessie_2 ->
      ('Return_label:  begin   (return := !__retres); (raise Return) end) end);
    absurd  end with Return -> !return end)) 

let monotonic_ensures_default "W:diverges:N" "expl:Function monotonic, default behavior"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 74 4 13#=
 fun (t_1 : (pointer intP)) (size_2 : int32) (intP_t_1_3_alloc_table : (alloc_table intP)) (intP_intM_t_1_3 : (memory intP int32)) ->
  requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 61 13 21#
              (Int.(>) (integer_of_int32 size_2) (1)))
             /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                 (Int.(<=) (offset_min intP_t_1_3_alloc_table t_1) (0)))
                /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                   (Int.(>=) (offset_max intP_t_1_3_alloc_table t_1)
                   (Int.(-) (integer_of_int32 size_2) (1)))))))  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
            true) } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let non_dec = ref (any_int32 ()) in
     (let non_inc = ref (any_int32 ()) in
     (let i_1_0 = ref (any_int32 ()) in
     (let i_0_0_0 = ref (any_int32 ()) in
     (let __retres_1 = ref (any_int32 ()) in
     begin
       (let _jessie_110 = (non_dec := (safe_int32_of_integer_ (1))) in ());
      (let _jessie_112 = (non_inc := (safe_int32_of_integer_ (1))) in ());
      try
       begin
         (let _jessie_114 = (i_1_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_9: 
        begin
          loop
          invariant
            { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 80 23 73#
               (forall j_3:int.
                (((Int.(<=) (0) j_3)
                 /\ (Int.(<) j_3 (Int.(-) (integer_of_int32 !i_1_0) (1)))) ->
                 (Int.(<=)
                 (integer_of_int32 (select intP_intM_t_1_3 (shift t_1 j_3)))
                 (integer_of_int32
                 (select intP_intM_t_1_3 (shift t_1 (Int.(+) j_3 (1)))))))))
              /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 41#
                 ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 29#
                  (Int.(<=) (0) (integer_of_int32 !i_1_0)))
                 /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 28 41#
                    (Int.(<=) (integer_of_int32 !i_1_0)
                    (Int.(-) (integer_of_int32 size_2) (1))))))) } 
           begin
             any () requires { true }  ensures { true } ;
            try
             begin
               (let _jessie_118 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_1_0) (integer_of_int32 
                                                         (safe_int32_of_integer_ 
                                                          (Int.(-) (integer_of_int32 size_2) (1)))))
                 then () else (raise (Goto_while_0_break_exc ())));
                (if (Int.(>) (integer_of_int32 (safe_acc_ intP_intM_t_1_3 
                                                (shift t_1 (integer_of_int32 !i_1_0)))) 
                     (integer_of_int32 (safe_acc_ intP_intM_t_1_3 (shift t_1 
                                                                   (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_1_0) (1))))))))
                then
                 (let _jessie_116 =
                 (non_dec := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_1_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_1_0) (1))));
                !i_1_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_13 -> () end end end;
         (raise (Goto_while_0_break_exc ())) end) end with
       Goto_while_0_break_exc _jessie_10 -> ('While_0_break:  ()) end;
      try
       begin
         (let _jessie_120 = (i_0_0_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_10: 
        begin
          loop
          invariant
            { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 92 23 73#
               (forall j_4:int.
                (((Int.(<=) (0) j_4)
                 /\ (Int.(<) j_4 (Int.(-) (integer_of_int32 !i_0_0_0) (1)))) ->
                 (Int.(>=)
                 (integer_of_int32 (select intP_intM_t_1_3 (shift t_1 j_4)))
                 (integer_of_int32
                 (select intP_intM_t_1_3 (shift t_1 (Int.(+) j_4 (1)))))))))
              /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 41#
                 ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 29#
                  (Int.(<=) (0) (integer_of_int32 !i_0_0_0)))
                 /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 28 41#
                    (Int.(<=) (integer_of_int32 !i_0_0_0)
                    (Int.(-) (integer_of_int32 size_2) (1))))))) } 
           begin
             any () requires { true }  ensures { true } ;
            try
             begin
               (let _jessie_124 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_0_0_0) (integer_of_int32 
                                                           (safe_int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_2) (1)))))
                 then () else (raise (Goto_while_0_break_0_exc ())));
                (if (Int.(<) (integer_of_int32 (safe_acc_ intP_intM_t_1_3 
                                                (shift t_1 (integer_of_int32 !i_0_0_0)))) 
                     (integer_of_int32 (safe_acc_ intP_intM_t_1_3 (shift t_1 
                                                                   (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_0_0_0) (1))))))))
                then
                 (let _jessie_122 =
                 (non_inc := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_0_0_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_0_0) (1))));
                !i_0_0_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_15 -> () end end end;
         (raise (Goto_while_0_break_0_exc ())) end) end with
       Goto_while_0_break_0_exc _jessie_11 -> ('While_0_break_0:  ()) end;
      (let _jessie_126 =
      (__retres_1 := (safe_int32_of_integer_ (bw_or (integer_of_int32 !non_dec) 
                                              (integer_of_int32 !non_inc)))) in
      ()); (return := !__retres_1); (raise Return) end))))); absurd  end with
   Return -> !return end)) 

let monotonic_ensures_non_decreasing "W:diverges:N" "expl:Function monotonic, Behavior `non_decreasing'"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 74 4 13#=
 fun (t_1 : (pointer intP)) (size_2 : int32) (intP_t_1_3_alloc_table : (alloc_table intP)) (intP_intM_t_1_3 : (memory intP int32)) ->
  requires { ((forall i_4:int.
               (forall j_7:int.
                (((Int.(<=) (0) i_4)
                 /\ ((Int.(<) i_4 j_7)
                    /\ (Int.(<) j_7 (integer_of_int32 size_2)))) ->
                 (Int.(<=)
                 (integer_of_int32 (select intP_intM_t_1_3 (shift t_1 i_4)))
                 (integer_of_int32 (select intP_intM_t_1_3 (shift t_1 j_7)))))))
             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 61 13 21#
                 (Int.(>) (integer_of_int32 size_2) (1)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                    (Int.(<=) (offset_min intP_t_1_3_alloc_table t_1) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                      (Int.(>=) (offset_max intP_t_1_3_alloc_table t_1)
                      (Int.(-) (integer_of_int32 size_2) (1))))))))  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 66 16 28#
            ((integer_of_int32 result) = (1))) } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let non_dec = ref (any_int32 ()) in
     (let non_inc = ref (any_int32 ()) in
     (let i_1_0 = ref (any_int32 ()) in
     (let i_0_0_0 = ref (any_int32 ()) in
     (let __retres_1 = ref (any_int32 ()) in
     begin
       (let _jessie_129 = (non_dec := (safe_int32_of_integer_ (1))) in ());
      (let _jessie_131 = (non_inc := (safe_int32_of_integer_ (1))) in ());
      try
       begin
         (let _jessie_133 = (i_1_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_11: 
        begin
          loop
          invariant
            { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 215 9 1028#
              true) } 
           begin
             any ()
             requires { true } reads { i_1_0 } 
              ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 80 23 73#
                         (forall j_3:int.
                          (((Int.(<=) (0) j_3)
                           /\ (Int.(<) j_3
                              (Int.(-) (integer_of_int32 !i_1_0) (1)))) ->
                           (Int.(<=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 j_3)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) j_3 (1)))))))))
                        /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 41#
                           ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 29#
                            (Int.(<=) (0) (integer_of_int32 !i_1_0)))
                           /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 28 41#
                              (Int.(<=) (integer_of_int32 !i_1_0)
                              (Int.(-) (integer_of_int32 size_2) (1))))))) } ;
            try
             begin
               (let _jessie_137 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_1_0) (integer_of_int32 
                                                         (safe_int32_of_integer_ 
                                                          (Int.(-) (integer_of_int32 size_2) (1)))))
                 then () else (raise (Goto_while_0_break_exc ())));
                (if (Int.(>) (integer_of_int32 (safe_acc_ intP_intM_t_1_3 
                                                (shift t_1 (integer_of_int32 !i_1_0)))) 
                     (integer_of_int32 (safe_acc_ intP_intM_t_1_3 (shift t_1 
                                                                   (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_1_0) (1))))))))
                then
                 (let _jessie_135 =
                 (non_dec := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_1_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_1_0) (1))));
                !i_1_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_13 -> () end end end;
         (raise (Goto_while_0_break_exc ())) end) end with
       Goto_while_0_break_exc _jessie_10 -> ('While_0_break:  ()) end;
      try
       begin
         (let _jessie_139 = (i_0_0_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_12: 
        begin
          loop
          invariant
            { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 243 9 1048#
              true) } 
           begin
             any ()
             requires { true } reads { i_0_0_0 } 
              ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 92 23 73#
                         (forall j_4:int.
                          (((Int.(<=) (0) j_4)
                           /\ (Int.(<) j_4
                              (Int.(-) (integer_of_int32 !i_0_0_0) (1)))) ->
                           (Int.(>=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 j_4)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) j_4 (1)))))))))
                        /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 41#
                           ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 29#
                            (Int.(<=) (0) (integer_of_int32 !i_0_0_0)))
                           /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 28 41#
                              (Int.(<=) (integer_of_int32 !i_0_0_0)
                              (Int.(-) (integer_of_int32 size_2) (1))))))) } ;
            try
             begin
               (let _jessie_143 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_0_0_0) (integer_of_int32 
                                                           (safe_int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_2) (1)))))
                 then () else (raise (Goto_while_0_break_0_exc ())));
                (if (Int.(<) (integer_of_int32 (safe_acc_ intP_intM_t_1_3 
                                                (shift t_1 (integer_of_int32 !i_0_0_0)))) 
                     (integer_of_int32 (safe_acc_ intP_intM_t_1_3 (shift t_1 
                                                                   (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_0_0_0) (1))))))))
                then
                 (let _jessie_141 =
                 (non_inc := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_0_0_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_0_0) (1))));
                !i_0_0_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_15 -> () end end end;
         (raise (Goto_while_0_break_0_exc ())) end) end with
       Goto_while_0_break_0_exc _jessie_11 -> ('While_0_break_0:  ()) end;
      (let _jessie_145 =
      (__retres_1 := (safe_int32_of_integer_ (bw_or (integer_of_int32 !non_dec) 
                                              (integer_of_int32 !non_inc)))) in
      ()); (return := !__retres_1); (raise Return) end))))); absurd  end with
   Return -> !return end)) 

let monotonic_ensures_non_increasing "W:diverges:N" "expl:Function monotonic, Behavior `non_increasing'"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 74 4 13#=
 fun (t_1 : (pointer intP)) (size_2 : int32) (intP_t_1_3_alloc_table : (alloc_table intP)) (intP_intM_t_1_3 : (memory intP int32)) ->
  requires { ((forall i_3:int.
               (forall j_6:int.
                (((Int.(<=) (0) i_3)
                 /\ ((Int.(<) i_3 j_6)
                    /\ (Int.(<) j_6 (integer_of_int32 size_2)))) ->
                 (Int.(>=)
                 (integer_of_int32 (select intP_intM_t_1_3 (shift t_1 i_3)))
                 (integer_of_int32 (select intP_intM_t_1_3 (shift t_1 j_6)))))))
             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 61 13 21#
                 (Int.(>) (integer_of_int32 size_2) (1)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                    (Int.(<=) (offset_min intP_t_1_3_alloc_table t_1) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                      (Int.(>=) (offset_max intP_t_1_3_alloc_table t_1)
                      (Int.(-) (integer_of_int32 size_2) (1))))))))  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 69 16 28#
            ((integer_of_int32 result) = (1))) } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let non_dec = ref (any_int32 ()) in
     (let non_inc = ref (any_int32 ()) in
     (let i_1_0 = ref (any_int32 ()) in
     (let i_0_0_0 = ref (any_int32 ()) in
     (let __retres_1 = ref (any_int32 ()) in
     begin
       (let _jessie_148 = (non_dec := (safe_int32_of_integer_ (1))) in ());
      (let _jessie_150 = (non_inc := (safe_int32_of_integer_ (1))) in ());
      try
       begin
         (let _jessie_152 = (i_1_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_13: 
        begin
          loop
          invariant
            { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 215 9 1028#
              true) } 
           begin
             any ()
             requires { true } reads { i_1_0 } 
              ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 80 23 73#
                         (forall j_3:int.
                          (((Int.(<=) (0) j_3)
                           /\ (Int.(<) j_3
                              (Int.(-) (integer_of_int32 !i_1_0) (1)))) ->
                           (Int.(<=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 j_3)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) j_3 (1)))))))))
                        /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 41#
                           ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 29#
                            (Int.(<=) (0) (integer_of_int32 !i_1_0)))
                           /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 28 41#
                              (Int.(<=) (integer_of_int32 !i_1_0)
                              (Int.(-) (integer_of_int32 size_2) (1))))))) } ;
            try
             begin
               (let _jessie_156 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_1_0) (integer_of_int32 
                                                         (safe_int32_of_integer_ 
                                                          (Int.(-) (integer_of_int32 size_2) (1)))))
                 then () else (raise (Goto_while_0_break_exc ())));
                (if (Int.(>) (integer_of_int32 (safe_acc_ intP_intM_t_1_3 
                                                (shift t_1 (integer_of_int32 !i_1_0)))) 
                     (integer_of_int32 (safe_acc_ intP_intM_t_1_3 (shift t_1 
                                                                   (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_1_0) (1))))))))
                then
                 (let _jessie_154 =
                 (non_dec := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_1_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_1_0) (1))));
                !i_1_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_13 -> () end end end;
         (raise (Goto_while_0_break_exc ())) end) end with
       Goto_while_0_break_exc _jessie_10 -> ('While_0_break:  ()) end;
      try
       begin
         (let _jessie_158 = (i_0_0_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_14: 
        begin
          loop
          invariant
            { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 243 9 1048#
              true) } 
           begin
             any ()
             requires { true } reads { i_0_0_0 } 
              ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 92 23 73#
                         (forall j_4:int.
                          (((Int.(<=) (0) j_4)
                           /\ (Int.(<) j_4
                              (Int.(-) (integer_of_int32 !i_0_0_0) (1)))) ->
                           (Int.(>=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 j_4)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) j_4 (1)))))))))
                        /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 41#
                           ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 29#
                            (Int.(<=) (0) (integer_of_int32 !i_0_0_0)))
                           /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 28 41#
                              (Int.(<=) (integer_of_int32 !i_0_0_0)
                              (Int.(-) (integer_of_int32 size_2) (1))))))) } ;
            try
             begin
               (let _jessie_162 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_0_0_0) (integer_of_int32 
                                                           (safe_int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_2) (1)))))
                 then () else (raise (Goto_while_0_break_0_exc ())));
                (if (Int.(<) (integer_of_int32 (safe_acc_ intP_intM_t_1_3 
                                                (shift t_1 (integer_of_int32 !i_0_0_0)))) 
                     (integer_of_int32 (safe_acc_ intP_intM_t_1_3 (shift t_1 
                                                                   (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_0_0_0) (1))))))))
                then
                 (let _jessie_160 =
                 (non_inc := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_0_0_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_0_0) (1))));
                !i_0_0_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_15 -> () end end end;
         (raise (Goto_while_0_break_0_exc ())) end) end with
       Goto_while_0_break_0_exc _jessie_11 -> ('While_0_break_0:  ()) end;
      (let _jessie_164 =
      (__retres_1 := (safe_int32_of_integer_ (bw_or (integer_of_int32 !non_dec) 
                                              (integer_of_int32 !non_inc)))) in
      ()); (return := !__retres_1); (raise Return) end))))); absurd  end with
   Return -> !return end)) 

let monotonic_ensures_non_monotonic "W:diverges:N" "expl:Function monotonic, Behavior `non_monotonic'"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 74 4 13#=
 fun (t_1 : (pointer intP)) (size_2 : int32) (intP_t_1_3_alloc_table : (alloc_table intP)) (intP_intM_t_1_3 : (memory intP int32)) ->
  requires { ((exists i_2:int.
               (exists j_5:int.
                ((Int.(<=) (0) i_2)
                /\ ((Int.(<) i_2 j_5)
                   /\ ((Int.(<) j_5 (Int.(-) (integer_of_int32 size_2) (1)))
                      /\ (((Int.(<=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 i_2)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) i_2 (1))))))
                          /\ (Int.(>)
                             (integer_of_int32
                             (select intP_intM_t_1_3 (shift t_1 j_5)))
                             (integer_of_int32
                             (select intP_intM_t_1_3
                             (shift t_1 (Int.(+) j_5 (1)))))))
                         \/ ((Int.(<)
                             (integer_of_int32
                             (select intP_intM_t_1_3 (shift t_1 i_2)))
                             (integer_of_int32
                             (select intP_intM_t_1_3
                             (shift t_1 (Int.(+) i_2 (1))))))
                            /\ (Int.(>=)
                               (integer_of_int32
                               (select intP_intM_t_1_3 (shift t_1 j_5)))
                               (integer_of_int32
                               (select intP_intM_t_1_3
                               (shift t_1 (Int.(+) j_5 (1)))))))))))))
             /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
                ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 61 13 21#
                 (Int.(>) (integer_of_int32 size_2) (1)))
                /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                    (Int.(<=) (offset_min intP_t_1_3_alloc_table t_1) (0)))
                   /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                      (Int.(>=) (offset_max intP_t_1_3_alloc_table t_1)
                      (Int.(-) (integer_of_int32 size_2) (1))))))))  }
  ensures { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 72 16 28#
            ((integer_of_int32 result) = (0))) } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let non_dec = ref (any_int32 ()) in
     (let non_inc = ref (any_int32 ()) in
     (let i_1_0 = ref (any_int32 ()) in
     (let i_0_0_0 = ref (any_int32 ()) in
     (let __retres_1 = ref (any_int32 ()) in
     begin
       (let _jessie_167 = (non_dec := (safe_int32_of_integer_ (1))) in ());
      (let _jessie_169 = (non_inc := (safe_int32_of_integer_ (1))) in ());
      try
       begin
         (let _jessie_171 = (i_1_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_15: 
        begin
          loop
          invariant
            { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 215 9 1028#
              true) } 
           begin
             any ()
             requires { true } reads { i_1_0 } 
              ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 80 23 73#
                         (forall j_3:int.
                          (((Int.(<=) (0) j_3)
                           /\ (Int.(<) j_3
                              (Int.(-) (integer_of_int32 !i_1_0) (1)))) ->
                           (Int.(<=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 j_3)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) j_3 (1)))))))))
                        /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 41#
                           ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 29#
                            (Int.(<=) (0) (integer_of_int32 !i_1_0)))
                           /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 28 41#
                              (Int.(<=) (integer_of_int32 !i_1_0)
                              (Int.(-) (integer_of_int32 size_2) (1))))))) } ;
            try
             begin
               (let _jessie_175 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_1_0) (integer_of_int32 
                                                         (safe_int32_of_integer_ 
                                                          (Int.(-) (integer_of_int32 size_2) (1)))))
                 then () else (raise (Goto_while_0_break_exc ())));
                (if (Int.(>) (integer_of_int32 (safe_acc_ intP_intM_t_1_3 
                                                (shift t_1 (integer_of_int32 !i_1_0)))) 
                     (integer_of_int32 (safe_acc_ intP_intM_t_1_3 (shift t_1 
                                                                   (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_1_0) (1))))))))
                then
                 (let _jessie_173 =
                 (non_dec := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_1_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_1_0) (1))));
                !i_1_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_13 -> () end end end;
         (raise (Goto_while_0_break_exc ())) end) end with
       Goto_while_0_break_exc _jessie_10 -> ('While_0_break:  ()) end;
      try
       begin
         (let _jessie_177 = (i_0_0_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_16: 
        begin
          loop
          invariant
            { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 243 9 1048#
              true) } 
           begin
             any ()
             requires { true } reads { i_0_0_0 } 
              ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 92 23 73#
                         (forall j_4:int.
                          (((Int.(<=) (0) j_4)
                           /\ (Int.(<) j_4
                              (Int.(-) (integer_of_int32 !i_0_0_0) (1)))) ->
                           (Int.(>=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 j_4)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) j_4 (1)))))))))
                        /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 41#
                           ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 29#
                            (Int.(<=) (0) (integer_of_int32 !i_0_0_0)))
                           /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 28 41#
                              (Int.(<=) (integer_of_int32 !i_0_0_0)
                              (Int.(-) (integer_of_int32 size_2) (1))))))) } ;
            try
             begin
               (let _jessie_181 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_0_0_0) (integer_of_int32 
                                                           (safe_int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_2) (1)))))
                 then () else (raise (Goto_while_0_break_0_exc ())));
                (if (Int.(<) (integer_of_int32 (safe_acc_ intP_intM_t_1_3 
                                                (shift t_1 (integer_of_int32 !i_0_0_0)))) 
                     (integer_of_int32 (safe_acc_ intP_intM_t_1_3 (shift t_1 
                                                                   (integer_of_int32 
                                                                    (safe_int32_of_integer_ 
                                                                    (Int.(+) 
                                                                    (integer_of_int32 !i_0_0_0) (1))))))))
                then
                 (let _jessie_179 =
                 (non_inc := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_0_0_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_0_0) (1))));
                !i_0_0_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_15 -> () end end end;
         (raise (Goto_while_0_break_0_exc ())) end) end with
       Goto_while_0_break_0_exc _jessie_11 -> ('While_0_break_0:  ()) end;
      (let _jessie_183 =
      (__retres_1 := (safe_int32_of_integer_ (bw_or (integer_of_int32 !non_dec) 
                                              (integer_of_int32 !non_inc)))) in
      ()); (return := !__retres_1); (raise Return) end))))); absurd  end with
   Return -> !return end)) 

let monotonic_safety "expl:Function monotonic, Safety"
 #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 74 4 13#=
 fun (t_1 : (pointer intP)) (size_2 : int32) (intP_t_1_3_alloc_table : (alloc_table intP)) (intP_intM_t_1_3 : (memory intP int32)) ->
  requires { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/" 0 0 0#
             ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 61 13 21#
              (Int.(>) (integer_of_int32 size_2) (1)))
             /\ ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                 (Int.(<=) (offset_min intP_t_1_3_alloc_table t_1) (0)))
                /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 62 13 34#
                   (Int.(>=) (offset_max intP_t_1_3_alloc_table t_1)
                   (Int.(-) (integer_of_int32 size_2) (1)))))))  }
  ensures { true } 
  ('Init: 
  (let return = ref (any_int32 ()) in
  try
   begin
     (let non_dec = ref (any_int32 ()) in
     (let non_inc = ref (any_int32 ()) in
     (let i_1_0 = ref (any_int32 ()) in
     (let i_0_0_0 = ref (any_int32 ()) in
     (let __retres_1 = ref (any_int32 ()) in
     begin
       (let _jessie_91 = (non_dec := (safe_int32_of_integer_ (1))) in ());
      (let _jessie_93 = (non_inc := (safe_int32_of_integer_ (1))) in ());
      try
       begin
         (let _jessie_95 = (i_1_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_7: 
        begin
          loop
          invariant
            { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 215 9 1028#
              true) }
            variant { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 81 21 29# 
              (Int.(-) (integer_of_int32 size_2) (integer_of_int32 !i_1_0))) }
           begin
             any ()
             requires { true } reads { i_1_0 } 
              ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 80 23 73#
                         (forall j_3:int.
                          (((Int.(<=) (0) j_3)
                           /\ (Int.(<) j_3
                              (Int.(-) (integer_of_int32 !i_1_0) (1)))) ->
                           (Int.(<=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 j_3)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) j_3 (1)))))))))
                        /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 41#
                           ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 23 29#
                            (Int.(<=) (0) (integer_of_int32 !i_1_0)))
                           /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 79 28 41#
                              (Int.(<=) (integer_of_int32 !i_1_0)
                              (Int.(-) (integer_of_int32 size_2) (1))))))) } ;
            try
             begin
               (let _jessie_99 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_1_0) (integer_of_int32 
                                                         ("expl:arithmetic overflow"
                                                         #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 83 19 25#
                                                         (int32_of_integer_ 
                                                          (Int.(-) (integer_of_int32 size_2) (1))))))
                 then () else (raise (Goto_while_0_break_exc ())));
                (if (Int.(>) (integer_of_int32 ("expl:pointer dereference"
                                               #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 85 11 15#
                                               (offset_acc_ intP_t_1_3_alloc_table intP_intM_t_1_3 t_1 
                                                (integer_of_int32 !i_1_0)))) 
                     (integer_of_int32 ("expl:pointer dereference"
                                       #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 85 18 24#
                                       (offset_acc_ intP_t_1_3_alloc_table intP_intM_t_1_3 t_1 
                                        (integer_of_int32 ("expl:arithmetic overflow"
                                                          #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 85 20 23#
                                                          (int32_of_integer_ 
                                                           (Int.(+) (integer_of_int32 !i_1_0) (1)))))))))
                then
                 (let _jessie_97 =
                 (non_dec := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_1_0 := ("expl:arithmetic overflow"
                          #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 83 27 30#
                          (int32_of_integer_ (Int.(+) (integer_of_int32 !i_1_0) (1)))));
                !i_1_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_13 -> () end end end;
         (raise (Goto_while_0_break_exc ())) end) end with
       Goto_while_0_break_exc _jessie_10 -> ('While_0_break:  ()) end;
      try
       begin
         (let _jessie_101 = (i_0_0_0 := (safe_int32_of_integer_ (0))) in ());
        ('Loop_8: 
        begin
          loop
          invariant
            { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.jessie/Imran_Ibrahimli.jc" 243 9 1048#
              true) }
            variant { (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 93 21 29# 
              (Int.(-) (integer_of_int32 size_2) (integer_of_int32 !i_0_0_0))) }
           begin
             any ()
             requires { true } reads { i_0_0_0 } 
              ensures { ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 92 23 73#
                         (forall j_4:int.
                          (((Int.(<=) (0) j_4)
                           /\ (Int.(<) j_4
                              (Int.(-) (integer_of_int32 !i_0_0_0) (1)))) ->
                           (Int.(>=)
                           (integer_of_int32
                           (select intP_intM_t_1_3 (shift t_1 j_4)))
                           (integer_of_int32
                           (select intP_intM_t_1_3
                           (shift t_1 (Int.(+) j_4 (1)))))))))
                        /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 41#
                           ((#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 23 29#
                            (Int.(<=) (0) (integer_of_int32 !i_0_0_0)))
                           /\ (#"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 91 28 41#
                              (Int.(<=) (integer_of_int32 !i_0_0_0)
                              (Int.(-) (integer_of_int32 size_2) (1))))))) } ;
            try
             begin
               (let _jessie_105 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_0_0_0) (integer_of_int32 
                                                           ("expl:arithmetic overflow"
                                                           #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 95 19 25#
                                                           (int32_of_integer_ 
                                                            (Int.(-) 
                                                              (integer_of_int32 size_2) (1))))))
                 then () else (raise (Goto_while_0_break_0_exc ())));
                (if (Int.(<) (integer_of_int32 ("expl:pointer dereference"
                                               #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 97 11 15#
                                               (offset_acc_ intP_t_1_3_alloc_table intP_intM_t_1_3 t_1 
                                                (integer_of_int32 !i_0_0_0)))) 
                     (integer_of_int32 ("expl:pointer dereference"
                                       #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 97 18 24#
                                       (offset_acc_ intP_t_1_3_alloc_table intP_intM_t_1_3 t_1 
                                        (integer_of_int32 ("expl:arithmetic overflow"
                                                          #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 97 20 23#
                                                          (int32_of_integer_ 
                                                           (Int.(+) (integer_of_int32 !i_0_0_0) (1)))))))))
                then
                 (let _jessie_103 =
                 (non_inc := (safe_int32_of_integer_ (0))) in ()) else ());
                (i_0_0_0 := ("expl:arithmetic overflow"
                            #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 95 27 30#
                            (int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_0_0) (1)))));
                !i_0_0_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_15 -> () end end end;
         (raise (Goto_while_0_break_0_exc ())) end) end with
       Goto_while_0_break_0_exc _jessie_11 -> ('While_0_break_0:  ()) end;
      (let _jessie_107 =
      (__retres_1 := ("expl:arithmetic overflow"
                     #"/home/imran/Desktop/L3/certification/pw_exam/Imran_Ibrahimli.c" 102 11 28#
                     (int32_of_integer_ (bw_or (integer_of_int32 !non_dec) 
                                         (integer_of_int32 !non_inc))))) in
      ()); (return := !__retres_1); (raise Return) end))))); absurd  end with
   Return -> !return end)) 

end


